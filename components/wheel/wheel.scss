@import "../../static/styles/global-variables.scss";

:root {
    --wheel-font: 'ArialRoundedMTBold', sans-serif;
    --wheel-size: 600px;
    --wheel-slice-spacing: 60px;
    --wheel-border-size: 5px;
    --wheel-color: #da3768;
    --neutral-color: #fff;
    --PI: 3.14159265358979;
    --nb-item: 0;
    --item-nb: 0;
    --selected-item: 0;
    --nb-turn: 5;
    --spinning-duration: 5s;
    --reset-duration: 0.25s;
    --wheel-border-color: linear-gradient(180deg, rgba(253,227,0,1) 0%, rgba(235,124,0,1) 3%, rgba(251,215,38,1) 48%, rgba(180,0,21,1) 100%); 
  }
  
  /* Wheel container = outer pink circle*/
  .wheel-container {
    display: block;
    position: relative;
    box-sizing: content-box;
    width: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
    height: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
    padding: 8px;
    margin: auto;
    background: linear-gradient(180deg, rgba(253,227,0,1) 0%, rgba(235,124,0,1) 3%, rgba(251,215,38,1) 48%, rgba(180,0,21,1) 100%); ;
    border-radius: 50%;
    user-select: none;
  }
  
  /* Selection triangle = 1 pink + 1 white */
  .wheel-container::before,
  .wheel-container::after {
    content: '';
    display: block;
    position: absolute;
    height: 0;
    width: 0;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    border: solid transparent 20px;
    border-left-width: 0;
  }
  
  .wheel-container::before {
    right: 0px;
    border-right-color: var(--wheel-color);
  }
  
  .wheel-container::after {
    right: -5px;
    border-right-color: var(--neutral-color);
  }
  
  /* Wheel */
  .wheel {
    display: block;
    position: relative;
    box-sizing: content-box;
    margin: auto;
    width: var(--wheel-size);
    height: var(--wheel-size);
    overflow: hidden;
    border-radius: 50%;
    border: solid var(--wheel-border-color) var(--wheel-border-size);
    background-color: --wheel-border-color;
    transition: transform var(--reset-duration);
    transform: rotate(0deg);
    cursor: pointer;
  }
  
  .wheel.spinning {
    transition: transform var(--spinning-duration);
    transform: rotate(calc(var(--nb-turn) * 360deg + (-360deg * var(--selected-item) / var(--nb-item, 1))));
  }
  
  /* Center of the wheel = white circle in the center */
  .wheel::after {
    display: block;
    position: absolute;
    content: '';
    background-color: $white-color;
    color: $orange-color;
    width: 25px;
    height: 25px;
    z-index: 2;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 70%;
  }
  
  /* Element on the wheel */
  .wheel-item {
    display: block;
    position: absolute;
    box-sizing: border-box;
  
    /* position item */
    top: 50%;
    left: 50%;
    width: 50%;
    transform-origin: center left;
    transform: translateY(-50%) rotate(calc(var(--item-nb) * (360deg / var(--nb-item, 1))));
  
    /* text */
    color: var(--neutral-color);
    text-align: right;
    padding: 0 25px 0 50px;
    font-family: var(--wheel-font);
  }
  
  /* Element background = lighter pink triangle */
  .wheel-item:before {
    content: ' ';
    display: block;
    position: absolute;
    box-sizing: border-box;
    z-index: -1;
    width: 0;
    height: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding-left: 0px;
    opacity: 0.25;
  
    /* 
      Triangle width
       I don't know why I need to add
         "+ var (- wheel-size) / 2" in slice-max-width ==> gives 2.PI.R + R
       but overall it works pretty well
      TODO: To study
    */
    --slice-max-width: calc(var(--PI) * var(--wheel-size) + var(--wheel-size) / 1);
    --slice-width: calc((var(--slice-max-width) / var(--nb-item)) - var(--wheel-slice-spacing));
    border: solid transparent calc(var(--slice-width) / 2);
    border-left: solid transparent 0;
    /* triangle depth = from the center of the wheel to the edge = 300px / 2 */
    border-right: solid $orange-color calc(var(--wheel-size) / 2);
  }
  